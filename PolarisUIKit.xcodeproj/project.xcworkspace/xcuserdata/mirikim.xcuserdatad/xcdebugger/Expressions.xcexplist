<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "PopupWidget.init(header:content:attribute:):PopupWidget.swift">
         <PersistentStrings>
            <PersistentString
               value = "closeButton.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AttributedUILabel.type.setter:AttributedUILabel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.styleAttr.attribute">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PopupWidget.show(_:close:completion:):PopupWidget.swift">
         <PersistentStrings>
            <PersistentString
               value = "okButton.frame">
            </PersistentString>
            <PersistentString
               value = "view.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in LoadingIndicatorComponent.run(rotateDegree:step:totalStep:):LoadingIndicatorComponent.swift">
         <PersistentStrings>
            <PersistentString
               value = "CGFloat.pi / 180 * rotateDegree">
            </PersistentString>
            <PersistentString
               value = "CGFloat(CGFloat.pi / 180 * rotateDegree)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AttributedUILabel.drawText(in:):AttributedUILabel.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.styleAttr.attribute">
            </PersistentString>
            <PersistentString
               value = "self.styleAttr.type">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AttributedTextField.initialize():AttributedTextField.swift">
         <PersistentStrings>
            <PersistentString
               value = "boxLayer.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AttributedView.initialize():AttributedView.swift">
         <PersistentStrings>
            <PersistentString
               value = "decorateLayer.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "BoxAttribute.padding.didset:Palette.swift">
         <PersistentStrings>
            <PersistentString
               value = "padding">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NotificationWidget.init(header:content:attribute:):NotificationWidget.swift">
         <PersistentStrings>
            <PersistentString
               value = "view.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AttributedButton.type.setter:AttributedButton.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.titleEdgeInsets">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ButtonComponent.decorate():ButtonComponent.swift">
         <PersistentStrings>
            <PersistentString
               value = "iv.frame.height">
            </PersistentString>
            <PersistentString
               value = "self.title(for: .normal)">
            </PersistentString>
            <PersistentString
               value = "-(iv.frame.width + leftRightInset)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AttributedButton.contentRect(forBounds:):AttributedButton.swift">
         <PersistentStrings>
            <PersistentString
               value = "super.contentRect(forBounds: bounds)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "InternalPopupWidget.show(_:close:completion:):PopupWidget.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.view.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
